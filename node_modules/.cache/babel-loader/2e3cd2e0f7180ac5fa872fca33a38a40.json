{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\guzo\\\\cashiers\\\\src\\\\auth\\\\Admin\\\\components\\\\banks\\\\widgets\\\\SetAccount.js\",\n    _s = $RefreshSig$();\n\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport bankStyle from '../bankStyle';\nimport UseForm from '../../../../../commons/UseForm';\nimport React, { useState, useEffect } from 'react';\nimport LoadingButton from \"../../../../../commons/LoadingButton\";\nimport { store } from '../../../../state/AppAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Typography } from \"@material-ui/core\";\nimport { SET_ACCOUNT } from \"../../../../state/Constants\";\nimport { API_URL } from \"../../../../../constants/constants\";\n\nconst SetAccount = props => {\n  _s();\n\n  const {\n    inputs,\n    handleInputChange\n  } = UseForm({\n    holder_name: '',\n    account_number: '',\n    bank_id: props.bank.id\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const loadingEnabled = !finished && loading;\n  const isEnabled = inputs.holder_name.length > 0 && inputs.account_number.length > 0;\n  const dispatch = useDispatch();\n  const response = useSelector(state => state.authReducer.bankReducer.setAccounResponse);\n  const classes = bankStyle();\n  useEffect(() => {\n    if (response.status === true) {\n      setLoading(false);\n      setFinished(false);\n      setSubmitted(false);\n    }\n  });\n\n  const handleSubmit = () => {\n    setLoading(true);\n    setSubmitted(true);\n    dispatch(store(`${API_URL}bank_account`, inputs, SET_ACCOUNT));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ValidatorForm, {\n    onSubmit: handleSubmit,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: response.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n      className: classes.text_input,\n      label: 'Account number',\n      onChange: handleInputChange,\n      name: \"account_number\",\n      type: \"text\",\n      value: inputs.account_number,\n      validators: ['required'],\n      errorMessages: ['Please enter account number']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n      className: classes.text_input,\n      label: 'Account holder name',\n      onChange: handleInputChange,\n      name: \"holder_name\",\n      type: \"text\",\n      value: inputs.holder_name,\n      validators: ['required'],\n      errorMessages: ['Please enter account holder name']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n      className: classes.text_input,\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      text: 'Set account',\n      disabled: !isEnabled || submitted,\n      loading: loadingEnabled,\n      done: finished,\n      children: 'Set account'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SetAccount, \"Kl8t+N2gjcPUunIMpLDiUJeiNjE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SetAccount;\nexport default SetAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetAccount\");","map":{"version":3,"sources":["D:/projects/guzo/cashiers/src/auth/Admin/components/banks/widgets/SetAccount.js"],"names":["TextValidator","ValidatorForm","bankStyle","UseForm","React","useState","useEffect","LoadingButton","store","useDispatch","useSelector","Typography","SET_ACCOUNT","API_URL","SetAccount","props","inputs","handleInputChange","holder_name","account_number","bank_id","bank","id","errorMessage","setErrorMessage","loading","setLoading","finished","setFinished","submitted","setSubmitted","loadingEnabled","isEnabled","length","dispatch","response","state","authReducer","bankReducer","setAccounResponse","classes","status","handleSubmit","form","message","text_input"],"mappings":"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","sourcesContent":["import { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\"\r\nimport bankStyle from '../bankStyle'\r\nimport UseForm from '../../../../../commons/UseForm'\r\nimport React,{useState,useEffect} from 'react'\r\nimport LoadingButton from \"../../../../../commons/LoadingButton\"\r\nimport {store} from '../../../../state/AppAction'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { Typography } from \"@material-ui/core\"\r\nimport { SET_ACCOUNT } from \"../../../../state/Constants\"\r\nimport { API_URL } from \"../../../../../constants/constants\"\r\nconst SetAccount =(props)=>{\r\n    const {inputs,handleInputChange} = UseForm({holder_name:'',account_number:'',bank_id:props.bank.id})\r\n    const [errorMessage,setErrorMessage] = useState('');\r\n    const [loading,setLoading] = useState(false)\r\n    const [finished,setFinished] = useState(false)\r\n    const [submitted,setSubmitted] = useState(false)\r\n    const loadingEnabled = !finished && loading;\r\n    const isEnabled = inputs.holder_name.length > 0 && inputs.account_number.length > 0\r\n\r\n    const dispatch = useDispatch()\r\n    const response = useSelector(state=>state.authReducer.bankReducer.setAccounResponse)\r\n    const classes = bankStyle()\r\n\r\n    useEffect(()=>{\r\n        if(response.status===true){\r\n            setLoading(false)\r\n            setFinished(false)\r\n            setSubmitted(false)\r\n        }\r\n    })\r\n    const  handleSubmit = ()=>{\r\n        setLoading(true)\r\n        setSubmitted(true)\r\n        dispatch(store(`${API_URL}bank_account`,inputs,SET_ACCOUNT))\r\n    }\r\n    return(\r\n        <ValidatorForm onSubmit={handleSubmit} className={classes.form}>\r\n               <Typography>\r\n                   {response.message}\r\n               </Typography>\r\n                <TextValidator\r\n                className={classes.text_input}\r\n                label={'Account number'}\r\n                onChange={handleInputChange}\r\n                name=\"account_number\"\r\n                type='text'\r\n                value={inputs.account_number}\r\n                validators={['required']}\r\n                errorMessages={['Please enter account number']}\r\n                />\r\n\r\n                <TextValidator\r\n                className={classes.text_input}\r\n                label={'Account holder name'}\r\n                onChange={handleInputChange}\r\n                name=\"holder_name\"\r\n                type='text'\r\n                value={inputs.holder_name}\r\n                validators={['required']}\r\n                errorMessages={['Please enter account holder name']}\r\n                />\r\n\r\n                    <LoadingButton\r\n                            className={classes.text_input}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            text={'Set account'}\r\n                            disabled={!isEnabled || submitted}\r\n                            loading={loadingEnabled}\r\n                            done={finished}\r\n                        >\r\n                            {\r\n                                'Set account'\r\n                            }\r\n                    </LoadingButton>\r\n        </ValidatorForm>\r\n    )\r\n}\r\n\r\nexport default SetAccount"]},"metadata":{},"sourceType":"module"}