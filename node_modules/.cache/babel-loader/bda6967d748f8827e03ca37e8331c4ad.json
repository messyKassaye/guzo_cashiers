{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\guzo\\\\cashiers\\\\src\\\\auth\\\\Admin\\\\components\\\\buses\\\\widgets\\\\AddDriverAssistant.js\",\n    _s = $RefreshSig$();\n\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\nimport BusStyle from '../style/BusStyle';\nimport React, { useState, useEffect } from 'react';\nimport UseForm from '../../../../../commons/UseForm';\nimport LoadingButton from '../../../../../commons/LoadingButton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Typography } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport { store } from '../../../../state/AppAction';\nimport { API_URL } from '../../../../../constants/constants';\nimport { DRIVER_ASSISTANT_STORE } from '../../../../state/Constants';\n\nconst AddDriverAssistant = props => {\n  _s();\n\n  const classes = BusStyle();\n  const {\n    inputs,\n    handleInputChange\n  } = UseForm({\n    'name': '',\n    'phone': '',\n    'bus_id': props.bus.id\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const loadingEnabled = !finished && loading;\n  const isEnabled = inputs.name.length > 0 && inputs.phone.length > 0;\n  const dispatch = useDispatch();\n  const response = useSelector(state => state.authReducer.driverAssistantReducer.response);\n  useEffect(() => {\n    if (response.status === true) {\n      setLoading(false);\n      setSubmitted(false);\n      setFinished(false);\n    }\n  });\n\n  const handleSubmit = () => {\n    setLoading(true);\n    setSubmitted(true);\n    dispatch(store(`${API_URL}driver_assistant`, inputs, DRIVER_ASSISTANT_STORE));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(ValidatorForm, {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: green[500]\n        },\n        children: response.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.text_input,\n        label: props.placeholder,\n        onChange: handleInputChange,\n        name: \"name\",\n        type: \"text\",\n        value: inputs.name,\n        validators: ['required'],\n        errorMessages: ['Please enter driver name']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n        className: classes.text_input,\n        label: 'Phone number',\n        onChange: handleInputChange,\n        name: \"phone\",\n        type: \"text\",\n        value: inputs.phone,\n        validators: ['required'],\n        errorMessages: ['Please enter phone number']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        className: classes.text_input,\n        color: \"primary\",\n        variant: \"contained\",\n        type: \"submit\",\n        text: 'Add driver',\n        disabled: !isEnabled || submitted,\n        loading: loadingEnabled,\n        done: finished,\n        children: 'Add driver'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddDriverAssistant, \"Kl8t+N2gjcPUunIMpLDiUJeiNjE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddDriverAssistant;\nexport default AddDriverAssistant;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDriverAssistant\");","map":{"version":3,"sources":["D:/projects/guzo/cashiers/src/auth/Admin/components/buses/widgets/AddDriverAssistant.js"],"names":["TextValidator","ValidatorForm","BusStyle","React","useState","useEffect","UseForm","LoadingButton","useDispatch","useSelector","Typography","green","store","API_URL","DRIVER_ASSISTANT_STORE","AddDriverAssistant","props","classes","inputs","handleInputChange","bus","id","errorMessage","setErrorMessage","loading","setLoading","finished","setFinished","submitted","setSubmitted","loadingEnabled","isEnabled","name","length","phone","dispatch","response","state","authReducer","driverAssistantReducer","status","handleSubmit","container","form","color","message","text_input","placeholder"],"mappings":"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","sourcesContent":["import { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'\r\nimport BusStyle from '../style/BusStyle'\r\nimport React,{useState,useEffect} from 'react'\r\nimport UseForm from '../../../../../commons/UseForm'\r\nimport LoadingButton from '../../../../../commons/LoadingButton'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { Typography } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport {store} from '../../../../state/AppAction'\r\nimport { API_URL } from '../../../../../constants/constants'\r\nimport { DRIVER_ASSISTANT_STORE } from '../../../../state/Constants'\r\nconst AddDriverAssistant =(props)=>{\r\n    const classes = BusStyle()\r\n    const {inputs,handleInputChange} = UseForm({'name':'','phone':'','bus_id':props.bus.id})\r\n    const [errorMessage,setErrorMessage] = useState('');\r\n    const [loading,setLoading] = useState(false)\r\n    const [finished,setFinished] = useState(false)\r\n    const [submitted,setSubmitted] = useState(false)\r\n    const loadingEnabled = !finished && loading;\r\n    const isEnabled = inputs.name.length > 0 && inputs.phone.length > 0\r\n\r\n    const dispatch = useDispatch();\r\n    const response = useSelector(state=>state.authReducer.driverAssistantReducer.response)\r\n\r\n    useEffect(()=>{\r\n        if(response.status===true){\r\n            setLoading(false)\r\n            setSubmitted(false)\r\n            setFinished(false)\r\n        }\r\n    })\r\n    const handleSubmit =()=>{\r\n        setLoading(true)\r\n        setSubmitted(true)\r\n        dispatch(store(`${API_URL}driver_assistant`,inputs,DRIVER_ASSISTANT_STORE))\r\n    }\r\n    return(\r\n        <div className={classes.container}>\r\n            <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\r\n                <Typography style={{color:green[500]}}>\r\n                    {\r\n                        response.message\r\n                    }\r\n                </Typography>\r\n                <TextValidator\r\n                    \r\n                    className={classes.text_input}\r\n                    label={props.placeholder}\r\n                    onChange={handleInputChange}\r\n                    name=\"name\"\r\n                    type='text'\r\n                    value={inputs.name}\r\n                    validators={['required']}\r\n                    errorMessages={['Please enter driver name']}\r\n                />\r\n\r\n                <TextValidator\r\n                    className={classes.text_input}\r\n                    label={'Phone number'}\r\n                    onChange={handleInputChange}\r\n                    name=\"phone\"\r\n                    type='text'\r\n                    value={inputs.phone}\r\n                    validators={['required']}\r\n                    errorMessages={['Please enter phone number']}\r\n                />\r\n\r\n                    <LoadingButton\r\n                            className={classes.text_input}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            text={'Add driver'}\r\n                            disabled={!isEnabled || submitted}\r\n                            loading={loadingEnabled}\r\n                            done={finished}\r\n                        >\r\n                            {\r\n                                'Add driver'\r\n                            }\r\n                    </LoadingButton>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddDriverAssistant"]},"metadata":{},"sourceType":"module"}