{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\guzo\\\\cashiers\\\\src\\\\auth\\\\Admin\\\\components\\\\buses\\\\BusList.js\",\n    _s = $RefreshSig$();\n\nimport { Card, CardContent, CardHeader, Divider, Grid, List, ListItem, ListItemIcon, ListItemText, Typography } from \"@material-ui/core\";\nimport { index } from '../../../state/AppAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { API_URL } from \"../../../../constants/constants\";\nimport { FETCH_BUSES } from \"../../../state/Constants\";\nimport BusesLoading from \"../../../loading/BusesLoading\";\nimport { DirectionsBus } from \"@material-ui/icons\";\nimport Reat, { useState } from 'react';\nimport { grey } from \"@material-ui/core/colors\";\nimport DriverAndAssistant from \"./widgets/DriverAndAssistant\";\n\nconst BusList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const buses = useSelector(state => state.authReducer.busesReducer.buses.data);\n  const loading = useSelector(state => state.authReducer.busesReducer.loading);\n  const [bus, setBus] = useState(null);\n  const [selected, setSelected] = useState(null);\n  useEffect(() => {\n    dispatch(index(`${API_URL}buses`, FETCH_BUSES));\n  });\n\n  const handleClick = bus => {\n    setBus(bus);\n    setSelected(bus.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(BusesLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: bus.length <= 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: 'secondary',\n          children: \"There is not registered bus until now ):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: 'secondary',\n          variant: 'outlined',\n          children: \"Register new bus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: buses.map(bus => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              item: true,\n              md: 12,\n              xs: 12,\n              style: {\n                borderLeft: selected === bus.id ? '5px solid #031b4e' : null,\n                backgroundColor: selected === bus.id ? grey[400] : null\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(DirectionsBus, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 69\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: bus.plate_number,\n                secondary: bus.number,\n                onClick: () => handleClick(bus)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 65\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 1,\n          children: /*#__PURE__*/_jsxDEV(Divider, {\n            orientation: 'vertical',\n            style: {\n              height: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          md: 8,\n          children: bus === null ? /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Select on your bus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 69\n          }, this) : /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              marginLeft: -70\n            },\n            elevation: 0,\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: bus.plate_number,\n              action: bus.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 73\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 73\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              style: {\n                padding: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(DriverAndAssistant, {\n                bus: bus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 77\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 73\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n\n_s(BusList, \"YoYfV/DKdZaVF6EvDO9urmTOb58=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = BusList;\nexport default BusList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BusList\");","map":{"version":3,"sources":["D:/projects/guzo/cashiers/src/auth/Admin/components/buses/BusList.js"],"names":["Card","CardContent","CardHeader","Divider","Grid","List","ListItem","ListItemIcon","ListItemText","Typography","index","useDispatch","useSelector","React","useEffect","API_URL","FETCH_BUSES","BusesLoading","DirectionsBus","Reat","useState","grey","DriverAndAssistant","BusList","dispatch","buses","state","authReducer","busesReducer","data","loading","bus","setBus","selected","setSelected","handleClick","id","length","display","flexDirection","alignItems","map","borderLeft","backgroundColor","plate_number","number","height","marginLeft","padding"],"mappings":"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","sourcesContent":["import { Card, CardContent, CardHeader, Divider, Grid, List, ListItem, ListItemIcon, ListItemText, Typography } from \"@material-ui/core\"\r\nimport {index} from '../../../state/AppAction'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport React,{useEffect} from 'react'\r\nimport { API_URL } from \"../../../../constants/constants\"\r\nimport { FETCH_BUSES } from \"../../../state/Constants\"\r\nimport BusesLoading from \"../../../loading/BusesLoading\"\r\nimport { DirectionsBus } from \"@material-ui/icons\"\r\nimport Reat,{useState} from 'react'\r\nimport { grey } from \"@material-ui/core/colors\"\r\nimport DriverAndAssistant from \"./widgets/DriverAndAssistant\"\r\nconst BusList = ()=>{\r\n    const dispatch = useDispatch()\r\n    const buses = useSelector(state=>state.authReducer.busesReducer.buses.data);\r\n    const loading = useSelector(state=>state.authReducer.busesReducer.loading)\r\n    const [bus,setBus] = useState(null)\r\n    const [selected,setSelected] =useState(null);\r\n    \r\n    useEffect(()=>{\r\n        dispatch(index(`${API_URL}buses`,FETCH_BUSES))\r\n    })\r\n\r\n    const handleClick =(bus)=>{\r\n        setBus(bus)\r\n        setSelected(bus.id)\r\n    }\r\n    return(\r\n            <div>\r\n                {\r\n                    loading\r\n                    ?\r\n                        (\r\n                          <BusesLoading/>  \r\n                        )\r\n                    :\r\n                        (\r\n                            <div>\r\n                                {\r\n                                    bus.length<=0\r\n                                    ?\r\n                                        (\r\n                                            <div style={{display:'flex',flexDirection:'column',alignItems:'center'}}>\r\n                                                <Typography color={'secondary'}>\r\n                                                    There is not registered bus until now ):\r\n                                                </Typography>\r\n                                                <Button color={'secondary'} variant={'outlined'}>\r\n                                                    Register new bus\r\n                                                </Button>\r\n                                            </div>\r\n                                        )\r\n                                    :\r\n                                        (\r\n                                            <Grid container spacing={1}>\r\n                                                <Grid item md={3}>\r\n                                                    <List>\r\n                                                        {\r\n                                                            buses.map(bus=>(\r\n                                                                <ListItem button item md={12} xs={12}\r\n                                                                style={{\r\n                                                                    borderLeft:selected===bus.id?'5px solid #031b4e':null,\r\n                                                                    backgroundColor:selected===bus.id?grey[400]:null,\r\n                                                                }}\r\n                                                                >\r\n                                                                    <ListItemIcon>\r\n                                                                        <DirectionsBus/>\r\n                                                                    </ListItemIcon>\r\n                                                                    <ListItemText\r\n                                                                    \r\n                                                                    primary={bus.plate_number}\r\n                                                                    secondary={bus.number}\r\n                                                                    onClick={()=>handleClick(bus)}\r\n                                                                    />\r\n                                                                </ListItem>\r\n                                                            ))\r\n                                                        }\r\n                                                    </List>\r\n                                                </Grid>\r\n\r\n                                                <Grid item md={1}>\r\n                                                    <Divider\r\n                                                    orientation={'vertical'}\r\n                                                    style={{height:'100%'}}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item md={8}>\r\n                                                        {\r\n                                                            bus===null\r\n                                                            ?\r\n                                                                (\r\n                                                                    <Typography>\r\n                                                                        Select on your bus\r\n                                                                    </Typography>\r\n                                                                )\r\n                                                            :\r\n                                                                (\r\n                                                                    <Card style={{marginLeft:-70}} elevation={0}>\r\n                                                                        <CardHeader\r\n                                                                        title={bus.plate_number}\r\n                                                                        action={\r\n                                                                            bus.number\r\n                                                                        }\r\n                                                                        \r\n                                                                        />\r\n                                                                        <Divider/>\r\n                                                                        <CardContent style={{padding:0}}>\r\n                                                                            <DriverAndAssistant bus={bus} />\r\n                                                                        </CardContent>\r\n                                                                    </Card>\r\n                                                                )\r\n                                                        }\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        )\r\n                                }\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default BusList"]},"metadata":{},"sourceType":"module"}