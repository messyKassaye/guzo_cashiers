{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\guzo\\\\cashiers\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { Typography } from '@material-ui/core';\nimport { useState } from 'react';\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\nimport LoadingButton from '../commons/LoadingButton';\nimport useStyles from '../styles/homeStyle';\nimport UseForm from '../commons/UseForm';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { API_AUTH_URL } from '../constants/constants';\nimport { set } from '../TokenService';\nexport const Login = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    inputs,\n    handleInputChange\n  } = UseForm({\n    phone: '',\n    password: ''\n  });\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const loadingEnabled = !finished && loading;\n  const isEnabled = inputs.phone.length > 0 && inputs.password.length > 0;\n\n  const handleSubmit = () => {\n    setLoading(true);\n    setSubmitted(true);\n    axios.post(`${API_AUTH_URL}login`, inputs).then(response => response.data).then(res => {\n      set(res.token);\n      history.push('/auth');\n    }).catch(onerror => {\n      setLoading(false);\n      setFinished(false);\n      setSubmitted(false);\n\n      if (!onerror.response) {\n        setErrorMessage('Something is not good. Please check your internet connection ):');\n      } else {\n        let code = onerror.response.status;\n\n        if (code === 403) {\n          setErrorMessage('Incorrect phone or password is used');\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ValidatorForm, {\n    className: classes.loginContainer,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: \"p\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n      className: classes.text_input,\n      label: t('home.phone'),\n      onChange: handleInputChange,\n      name: \"phone\",\n      type: \"phone\",\n      value: inputs.phone,\n      validators: ['required'],\n      errorMessages: [t('home.error.phone')]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(TextValidator, {\n      className: classes.text_input,\n      label: t('home.password'),\n      name: \"password\",\n      type: \"password\",\n      onChange: handleInputChange,\n      value: inputs.password,\n      validators: ['required'],\n      errorMessages: [t('home.error.password')]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n      className: classes.text_input,\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      text: t('home.login'),\n      disabled: !isEnabled || submitted,\n      loading: loadingEnabled,\n      done: finished,\n      children: t('home.login')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Login, \"o+HyLm6prQ0KSbA7otTy1apX+X0=\", false, function () {\n  return [useStyles, useTranslation, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/projects/guzo/cashiers/src/components/Login.js"],"names":["Typography","useState","TextValidator","ValidatorForm","LoadingButton","useStyles","UseForm","useTranslation","axios","useHistory","API_AUTH_URL","set","Login","classes","inputs","handleInputChange","phone","password","t","history","errorMessage","setErrorMessage","loading","setLoading","finished","setFinished","submitted","setSubmitted","loadingEnabled","isEnabled","length","handleSubmit","post","then","response","data","res","token","push","catch","onerror","code","status","loginContainer","text_input"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core'\r\nimport { useState } from 'react'\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'\r\nimport LoadingButton from '../commons/LoadingButton'\r\nimport useStyles from '../styles/homeStyle'\r\nimport UseForm from '../commons/UseForm'\r\nimport {useTranslation} from 'react-i18next'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport { API_AUTH_URL } from '../constants/constants'\r\nimport { set } from '../TokenService'\r\nexport const Login =()=>{\r\n    const classes = useStyles() \r\n    const {inputs, handleInputChange} = UseForm({phone:'',password:''});\r\n    const {t} = useTranslation() \r\n    const history  =useHistory()\r\n\r\n    const [errorMessage,setErrorMessage] = useState('');\r\n    const [loading,setLoading] = useState(false)\r\n    const [finished,setFinished] = useState(false)\r\n    const [submitted,setSubmitted] = useState(false)\r\n    const loadingEnabled = !finished && loading;\r\n    const isEnabled = inputs.phone.length > 0 && inputs.password.length > 0\r\n\r\n\r\n   const  handleSubmit = ()=>{\r\n        setLoading(true)\r\n        setSubmitted(true)\r\n\r\n\r\n        axios.post(`${API_AUTH_URL}login`,inputs)\r\n        .then(response=>response.data)\r\n        .then(res=>{\r\n            set(res.token)\r\n            history.push('/auth')\r\n         })\r\n         .catch(onerror=>{\r\n            setLoading(false)\r\n            setFinished(false)\r\n            setSubmitted(false)\r\n    \r\n            if(!onerror.response){\r\n                setErrorMessage('Something is not good. Please check your internet connection ):')\r\n            }else {\r\n                let code = onerror.response.status\r\n                if(code===403){\r\n                    setErrorMessage('Incorrect phone or password is used')\r\n                }\r\n            }\r\n         })\r\n    }  \r\n    return (\r\n            <ValidatorForm className={classes.loginContainer} onSubmit={handleSubmit} >\r\n                    {\r\n                        <Typography component='p'>\r\n                        </Typography>\r\n                        }\r\n                    <TextValidator\r\n                        className={classes.text_input}\r\n                        label={t('home.phone')}\r\n                        onChange={handleInputChange}\r\n                        name=\"phone\"\r\n                        type='phone'\r\n                        value={inputs.phone}\r\n                        validators={['required']}\r\n                        errorMessages={[t('home.error.phone')]}\r\n                    />\r\n\r\n                    <TextValidator\r\n                    className={classes.text_input}\r\n                    label={t('home.password')}\r\n                    name=\"password\"\r\n                    type='password'\r\n                    onChange={handleInputChange}\r\n                    value={inputs.password}\r\n                    validators={['required']}\r\n                    errorMessages={[t('home.error.password')]}\r\n                    />               \r\n                    <LoadingButton\r\n                            className={classes.text_input}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            text={t('home.login')}\r\n                            disabled={!isEnabled || submitted}\r\n                            loading={loadingEnabled}\r\n                            done={finished}\r\n                        >\r\n                            {\r\n                                t('home.login')\r\n                            }\r\n                    </LoadingButton>\r\n            </ValidatorForm>\r\n    )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}