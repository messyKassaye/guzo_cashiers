{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\guzo\\\\cashiers\\\\src\\\\commons\\\\LanguageChanger.js\",\n    _s = $RefreshSig$();\n\nimport { IconButton, Menu, MenuItem, Typography } from \"@material-ui/core\";\nimport { Language } from \"@material-ui/icons\";\nimport useStyles from '../styles/homeStyle';\nimport React from 'react';\nimport i18next from 'i18next';\nimport Languages from '../data/Languages';\nimport { useTranslation } from 'react-i18next';\n\nconst LanguageChanger = () => {\n  _s();\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    t\n  } = useTranslation();\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = lan => {\n    setAnchorEl(null);\n    i18next.changeLanguage(lan);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.toolbarLanguage,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      color: 'inherit',\n      children: t('home.languages')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      size: 'medium',\n      color: 'inherit',\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(Language, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"simple-menu\",\n      anchorEl: anchorEl,\n      keepMounted: true,\n      open: Boolean(anchorEl),\n      onClose: handleClose,\n      children: Languages.map(language => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: language.symbol,\n        onClick: () => handleClose(language.symbol),\n        children: language.name\n      }, language.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LanguageChanger, \"CuIjP2Du/KRUka6VsyOGN5P8DYM=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c = LanguageChanger;\nexport default LanguageChanger;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageChanger\");","map":{"version":3,"sources":["D:/projects/guzo/cashiers/src/commons/LanguageChanger.js"],"names":["IconButton","Menu","MenuItem","Typography","Language","useStyles","React","i18next","Languages","useTranslation","LanguageChanger","classes","anchorEl","setAnchorEl","useState","t","handleClick","event","currentTarget","handleClose","lan","changeLanguage","toolbarLanguage","Boolean","map","language","symbol","name","id"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,mBAAvD;AACA,SAASC,QAAT,QAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAAQC,cAAR,QAA6B,eAA7B;;AACA,MAAMC,eAAe,GAAG,MAAI;AAAA;;AACxB,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BP,KAAK,CAACQ,QAAN,CAAe,IAAf,CAAhC;AACA,QAAM;AAACC,IAAAA;AAAD,MAAMN,cAAc,EAA1B;;AACA,QAAMO,WAAW,GAAIC,KAAD,IAAW;AAC3BJ,IAAAA,WAAW,CAACI,KAAK,CAACC,aAAP,CAAX;AACD,GAFH;;AAIE,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3BP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAN,IAAAA,OAAO,CAACc,cAAR,CAAuBD,GAAvB;AACD,GAHD;;AAKF,sBACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACW,eAAxB;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE,SAAnB;AAAA,gBACKP,CAAC,CAAC,gBAAD;AADN;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,UAAD;AAAY,MAAA,IAAI,EAAE,QAAlB;AAA4B,MAAA,KAAK,EAAE,SAAnC;AAA8C,uBAAc,aAA5D;AAA0E,uBAAc,MAAxF;AAA+F,MAAA,OAAO,EAAEC,WAAxG;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI,QAAC,IAAD;AACK,MAAA,EAAE,EAAC,aADR;AAEK,MAAA,QAAQ,EAAEJ,QAFf;AAGK,MAAA,WAAW,MAHhB;AAIK,MAAA,IAAI,EAAEW,OAAO,CAACX,QAAD,CAJlB;AAKK,MAAA,OAAO,EAAEO,WALd;AAAA,gBAQOX,SAAS,CAACgB,GAAV,CAAcC,QAAQ,iBACrB,QAAC,QAAD;AAA4B,QAAA,KAAK,EAAEA,QAAQ,CAACC,MAA5C;AAAoD,QAAA,OAAO,EAAE,MAAIP,WAAW,CAACM,QAAQ,CAACC,MAAV,CAA5E;AAAA,kBACGD,QAAQ,CAACE;AADZ,SAAeF,QAAQ,CAACG,EAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AARP;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAvCD;;GAAMlB,e;UACcL,S,EAEJI,c;;;KAHVC,e;AAyCN,eAAeA,eAAf","sourcesContent":["import { IconButton, Menu, MenuItem, Typography } from \"@material-ui/core\"\r\nimport { Language } from  \"@material-ui/icons\"\r\nimport useStyles from '../styles/homeStyle'\r\nimport React from 'react'\r\nimport i18next from 'i18next'\r\nimport Languages from '../data/Languages'\r\nimport {useTranslation} from 'react-i18next'\r\nconst LanguageChanger = ()=>{\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const {t} = useTranslation()\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = (lan) => {\r\n        setAnchorEl(null);\r\n        i18next.changeLanguage(lan)\r\n      };\r\n\r\n    return(\r\n        <div className={classes.toolbarLanguage}>\r\n            <Typography color={'inherit'}>\r\n                {t('home.languages')}\r\n            </Typography>\r\n            <IconButton size={'medium'} color={'inherit'} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                <Language/>\r\n            </IconButton>\r\n            <Menu\r\n                 id=\"simple-menu\"\r\n                 anchorEl={anchorEl}\r\n                 keepMounted\r\n                 open={Boolean(anchorEl)}\r\n                 onClose={handleClose}\r\n               >\r\n                 {\r\n                   Languages.map(language=>(\r\n                    <MenuItem key={language.id} value={language.symbol} onClick={()=>handleClose(language.symbol)}>\r\n                      {language.name}\r\n                    </MenuItem>\r\n                   ))\r\n                 }\r\n                 \r\n               </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LanguageChanger"]},"metadata":{},"sourceType":"module"}